front <- fromJSON( ,  path_front)
ref <- fromJSON( ,  path_ref)
print(strsplit(path_front, "/"))
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=last(strsplit(path_front, "/"))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
print(path_ref)
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
print(path_front)
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(path_front, path_ref, xlimit, ylimit) {
front <- fromJSON( ,  path_front)
ref <- fromJSON( ,  path_ref)
print(path_front)
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=last(strsplit(path_front, "/"))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
print(path_ref)
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(path_front, path_ref, xlimit, ylimit) {
front <- fromJSON( ,  path_front)
ref <- fromJSON( ,  path_ref)
print(path_front);
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=last(strsplit(path_front, "/"))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
print(path_ref)
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(path_front, path_ref, xlimit, ylimit) {
front <- fromJSON( ,  path_front)
ref <- fromJSON( ,  path_ref)
print(strsplit(path_front, "/"));
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=last(strsplit(path_front, "/"))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
print(path_ref)
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
print(path_ref)
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(path_front, path_ref, xlimit, ylimit) {
front <- fromJSON( ,  path_front)
ref <- fromJSON( ,  path_ref)
print(path_front);
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=last(strsplit(path_front, "/"))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(path_front, path_ref, xlimit, ylimit) {
front <- fromJSON( ,  path_front)
ref <- fromJSON( ,  path_ref)
print(path_front);
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=path_front)
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
path_ref <- paste(dir, p, ".pf", sep = "")
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
scatter(path_front, path_ref, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(p, a, e, xlimit, ylimit) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
front <- fromJSON( ,   path_front)
ref <- fromJSON( ,  paste(dir, p, ".pf", sep = ""))
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=paste(dir, p, "_",a,"_", e, sep = ""))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
scatter(p, a, e, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(p, a, e, xlimit, ylimit) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
front <- fromJSON( ,   path_front)
ref <- fromJSON( ,  paste(dir, p, ".pf", sep = ""))
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=paste(p, "_",a,"_", e, sep = ""))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
scatter(p, a, e, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
}
}
Date: `r Sys.time()`
library(rjson)
plots <- list()
dir <- "/home/julesy/Workspace/ttp-java/experiment/"
exp <- fromJSON( , '/home/julesy/Workspace/ttp-java/experiment/experiment.json')
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
file <- paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(p, a, e, xlimit, ylimit) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
front <- fromJSON( ,   path_front)
ref <- fromJSON( ,  paste(dir, p, ".pf", sep = ""))
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=paste(p, "_",a,"_", e, sep = ""))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
}
for(p in exp$problems) {
for(a in exp$algorithms) {
for(e in 0:(exp$runs-1)) {
scatter(p, a, e, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
svg(paste("/home/julesy/Workspace/ttp-java/experiment/", p, indicator, sep = ""))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
dev.off()
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
svg(paste("/home/julesy/Workspace/ttp-java/experiment/", p, "_", indicator, ".svg",  sep = ""))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
dev.off()
}
}
library(rjson)
#setwd("/home/julesy/Workspace/ttp-java")
plots <- list()
dir <- "experiment/"
exp <- fromJSON(, paste(dir, "experiment.json", sep=""))
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in exp$runs) {
file <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(p, a, e, xlimit, ylimit) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
front <- fromJSON( ,   path_front)
ref <- fromJSON( ,  paste(dir, p, ".pf", sep = ""))
svg(paste(dir, p, "_", a ,"_", e, ".svg", sep = ""))
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=paste(p, "_",a,"_", e, sep = ""))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
dev.off()
}
for(p in exp$problems) {
for(a in exp$algorithms) {
for(e in exp$runs) {
scatter(p, a, e, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
svg(paste(dir, p, "_", indicator, ".svg", sep = ""))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
dev.off()
}
}
library(rjson)
setwd("/home/julesy/Workspace/ttp-java")
plots <- list()
dir <- "experiment/"
exp <- fromJSON(, paste(dir, "experiment.json", sep=""))
limits <- list()
# collect all the fronts
for(p in exp$problems) {
l = list()
i <- 1
for(a in exp$algorithms) {
for(e in exp$runs) {
file <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
front <- fromJSON(,file)
l[[p]][[i]] <- front
i <- i + 1
}
}
# calculate the limits
limits[[p]]$xlimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[1]])))
limits[[p]]$ylimit <- range(sapply(l, function(entry) sapply(entry, function(x) x[[2]])))
}
last <- function(x) { return( x[length(x)] ) }
scatter <- function(p, a, e, xlimit, ylimit) {
path_front <- paste(dir, p, "_",a,"_", e, ".pf", sep = "")
print(path_front)
front <- fromJSON( ,   path_front)
ref <- fromJSON( ,  paste(dir, p, ".pf", sep = ""))
svg(paste(dir, p, "_", a ,"_", e, ".svg", sep = ""))
plot(ref[[1]], ref[[2]], xlim=xlimit, ylim=ylimit, pch=1, xlab = "time", ylab="profit", main=paste(p, "_",a,"_", e, sep = ""))
par(new = TRUE)
plot(front[[1]], front[[2]], xlim=xlimit, ylim=ylimit, axes = FALSE, pch=4, xlab = "", ylab = "")
dev.off()
}
for(p in exp$problems) {
for(a in exp$algorithms) {
for(e in exp$runs) {
scatter(p, a, e, limits[[p]]$xlimit, limits[[p]]$ylimit)
}
}
}
for(indicator in exp$indicators) {
for(p in exp$problems) {
entry <- lapply(exp$algorithms, function(a) fromJSON(,paste( dir, p, "_",a, ".", indicator, sep = "")))
svg(paste(dir, p, "_", indicator, ".svg", sep = ""))
boxplot(entry, names=exp$algorithms, main=paste(p, indicator))
dev.off()
}
}
R --version
version
